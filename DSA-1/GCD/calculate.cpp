// Автор: Калашников А.Н.

#include <iostream>
#include <cassert>
using namespace std;

// Задание: 8. Найти НОД (наибольший общий делитель) двух натуральных чисел.

/// Рекурсивная функция, возвращающая НОД (наибольший общий делитель) двух натуральных чисел a и b
/// Алгоритм Евклида: 
/// Если b равен 0, то НОД(a, b) = a; иначе НОД(a, b) = НОД(b, a % b).
size_t gcd(size_t a, size_t b) {
    if (b == 0) {
        return a;  // если второе число равно 0, то НОД равен первому числу.
    }
    else {
        return gcd(b, a % b);  // заменяем (a, b) на (b, a % b).
    }
}

/// Тестирование работы функции нахождения НОД
void testGCD() {
    // Тест 1: НОД(48, 18) = 6
    assert(gcd(48, 18) == 6);

    // Тест 2: НОД(54, 24) = 6
    assert(gcd(54, 24) == 6);

    // Тест 3: НОД(101, 103) = 1 
    assert(gcd(101, 103) == 1);

    // Тест 4: НОД(20, 0) = 20 (по определению, gcd(a, 0) = a)
    assert(gcd(20, 0) == 20);

    // Тест 5: НОД(0, 10) = 10 (по определению, gcd(0, a) = a)
    assert(gcd(0, 10) == 10);

    // Тест 6: НОД(270, 192) = 6
    assert(gcd(270, 192) == 6);

    // Тест 7: НОД(100, 25) = 25
    assert(gcd(100, 25) == 25);

    cout << "Все тесты успешно пройдены!" << endl;
}